
# name:  Deploy Backend to O2switch

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest

#     steps:
#       # 1. Récupérer le repo
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Move to backend folder
#         working-directory: ./backend
#         run: echo "Working in backend/"

#       - name: Setup Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: 20.19.4
#           cache: npm
#           cache-dependency-path: ./backend/package-lock.json

#       - name: Install dependencies
#         working-directory: ./backend
#         run: npm install

#       - name: Build project
#         working-directory: ./backend
#         run: npm run build

#         # 6. Créer le fichier .env depuis les secrets GitHub
#       - name: Create .env file
#         working-directory: ./backend/dist
#         run: |
#           echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
#           echo "DB_USER=${{ secrets.DB_USER }}" >> .env
#           echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
#           echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
#           echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
#           echo "secretKey=${{ secrets.secretKey }}" >> .env
#           echo "expiresInn=${{ secrets.expiresInn }}" >> .env
#           echo "expiresIn=${{ secrets.expiresIn }}" >> .env
#           echo "COOKIE_MAX_AGE=${{ secrets.COOKIE_MAX_AGE }}" >> .env
#           echo "INSEE_API_KEY=${{ secrets.INSEE_API_KEY }}" >> .env
#           echo "PORT=${{ secrets.PORT }}" >> .env

#       # 7. Déployer uniquement le backend compilé
#       - name: Upload backend via FTP
#         uses: SamKirkland/FTP-Deploy-Action@4.3.3
#         with:
#           server: ${{ secrets.FTP_SERVER }}
#           username: ${{ secrets.FTP_USERNAME }}
#           password: ${{ secrets.FTP_PASSWORD }}
#           protocol: ftp
#           port: 21
#           local-dir: ./backend/dist/   #  seul mon backend compilé
#           server-dir: ./
#           exclude: |
#             */.git
#             */node_modules/*
#             */.github/*
#             */tests/*
#           dangerous-clean-slate: true




# name:  Deploy Backend to O2switch

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest

#     steps:
#       # 1. Récupérer le repo
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Move to backend folder
#         working-directory: ./backend
#         run: echo "Working in backend/"

#       - name: Setup Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: 20.19.4
#           cache: npm
#           cache-dependency-path: ./backend/package-lock.json

#       - name: Install dependencies
#         working-directory: ./backend
#         run: npm install

#       - name: Build project
#         working-directory: ./backend
#         run: npm run build

#         # 6. Créer le fichier .env depuis les secrets GitHub
#       - name: Create .env file
#         working-directory: ./backend/dist
#         run: |
#           echo "DB_HOST=46.202.133.214" >> .env
#           echo "DB_USER=u839546084_solutravo" >> .env
#           echo "DB_PASSWORD=Solutravo@!2025Db_0206+" >> .env
#           echo "DB_NAME=u839546084_solutravo" >> .env
#           echo "DB_PORT=3306" >> .env
#           echo "secretKey=${{ secrets.secretKey }}" >> .env
#           echo "expiresInn=${{ secrets.expiresInn }}" >> .env
#           echo "expiresIn=${{ secrets.expiresIn }}" >> .env
#           echo "COOKIE_MAX_AGE=${{ secrets.COOKIE_MAX_AGE }}" >> .env
#           echo "INSEE_API_KEY=${{ secrets.INSEE_API_KEY }}" >> .env
#           echo "PORT=${{ secrets.PORT }}" >> .env

#       # 7. Déployer uniquement le backend compilé
#       - name: Upload backend via FTP
#         uses: SamKirkland/FTP-Deploy-Action@4.3.3
#         with:
#           server: ${{ secrets.FTP_SERVER }}
#           username: ${{ secrets.FTP_USERNAME }}
#           password: ${{ secrets.FTP_PASSWORD }}
#           protocol: ftp
#           port: 21
#           local-dir: ./backend/dist/   #  seul mon backend compilé
#           server-dir: ./
#           exclude: |
#             */.git
#             */node_modules/*
#             */.github/*
#             */tests/*
#           dangerous-clean-slate: true




# name: Deploy Backend to O2switch

# on:
#   push:
#     branches:
#       - main           # Staging
#       - prod_backend   # Production

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Setup Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: 20.19.4
#           cache: npm
#           cache-dependency-path: ./backend/package-lock.json

#       - name: Install dependencies
#         working-directory: ./backend
#         run: npm install

#       - name: Build project
#         working-directory: ./backend
#         run: npm run build

#       # ENVIRONNEMENT STAGING (main787)
#       - name: Create .env for Staging
#         if: github.ref == 'refs/heads/main'
#         working-directory: ./backend/dist
#         run: |
#           echo "DB_HOST=${{ secrets.DB_HOST}}" >> .env
#           echo "DB_USER=${{ secrets.DB_USER}}" >> .env
#           echo "DB_PASSWORD=${{ secrets.DB_PASSWORD}}" >> .env
#           echo "DB_NAME=${{ secrets.DB_NAME}}" >> .env
#           echo "DB_PORT=${{ secrets.DB_PORT}}" >> .env
#           echo "NODE_ENV=staging" >> .env
#           echo "secretKey=${{ secrets.secretKey }}" >> .env
#           echo "expiresInn=${{ secrets.expiresInn }}" >> .env
#           echo "expiresIn=${{ secrets.expiresIn }}" >> .env
#           echo "COOKIE_MAX_AGE=${{ secrets.COOKIE_MAX_AGE }}" >> .env
#           echo "INSEE_API_KEY=${{ secrets.INSEE_API_KEY }}" >> .env
#           echo "PORT=${{ secrets.PORT }}" >> .env

#       # ENVIRONNEMENT PRODUCTION (prod_backend)
#       - name: Create .env for Production
#         if: github.ref == 'refs/heads/prod_backend'
#         working-directory: ./backend/dist
#         run: |
#           echo "DB_HOST=46.202.133.214" >> .env
#           echo "DB_USER=u839546084_solutravo" >> .env
#           echo "DB_PASSWORD=Solutravo@!2025Db_0206+" >> .env
#           echo "DB_NAME=u839546084_solutravo" >> .env
#           echo "DB_PORT=3306" >> .env
#           echo "NODE_ENV=production" >> .env
#           echo "secretKey=${{ secrets.secretKey }}" >> .env
#           echo "expiresInn=${{ secrets.expiresInn }}" >> .env
#           echo "expiresIn=${{ secrets.expiresIn }}" >> .env
#           echo "COOKIE_MAX_AGE=${{ secrets.COOKIE_MAX_AGE }}" >> .env
#           echo "INSEE_API_KEY=${{ secrets.INSEE_API_KEY }}" >> .env
#           echo "PORT=${{ secrets.PORT }}" >> .env

#       - name: Upload backend via FTP
#         uses: SamKirkland/FTP-Deploy-Action@4.3.3
#         with:
#           server: ${{ secrets.FTP_SERVER }}
#           username: ${{ secrets.FTP_USERNAME }}
#           password: ${{ secrets.FTP_PASSWORD }}
#           local-dir: ./backend/dist/
#           server-dir: ./
#           exclude: |
#             */.git
#             */node_modules/*
#             */.github/*
#             */tests/*
#           dangerous-clean-slate: true




name: Deploy Backend to O2switch

on:
  push:
    branches:
      - main           # Staging
      - prod_backend   # Production

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.19.4
          cache: npm
          cache-dependency-path: ./backend/package-lock.json

      - name: Install dependencies
        working-directory: ./backend
        run: npm install

      - name: Build project
        working-directory: ./backend
        run: npm run build

      # ✅ NOUVEAU : Copier package.json et package-lock.json dans dist/
      - name: Copy package files to dist
        working-directory: ./backend
        run: |
          cp package.json dist/
          cp package-lock.json dist/

      # ENVIRONNEMENT STAGING (main)
      - name: Create .env for Staging
        if: github.ref == 'refs/heads/main'
        working-directory: ./backend/dist
        run: |
          echo "DB_HOST=${{ secrets.DB_HOST}}" >> .env
          echo "DB_USER=${{ secrets.DB_USER}}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD}}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME}}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT}}" >> .env
          echo "NODE_ENV=staging" >> .env
          echo "APP_URL=https://staging.solutravo-compta.fr" >> .env
          echo "secretKey=${{ secrets.secretKey }}" >> .env
          echo "expiresInn=${{ secrets.expiresInn }}" >> .env
          echo "expiresIn=${{ secrets.expiresIn }}" >> .env
          echo "COOKIE_MAX_AGE=${{ secrets.COOKIE_MAX_AGE }}" >> .env
          echo "INSEE_API_KEY=${{ secrets.INSEE_API_KEY }}" >> .env
          echo "PORT=${{ secrets.PORT }}" >> .env

      # ENVIRONNEMENT PRODUCTION (prod_backend)
      - name: Create .env for Production
        if: github.ref == 'refs/heads/prod_backend'
        working-directory: ./backend/dist
        run: |
          echo "DB_HOST=${{ secrets.PROD_DB_HOST }}" >> .env
          echo "DB_USER=${{ secrets.PROD_DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.PROD_DB_PASSWORD }}" >> .env
          echo "DB_NAME=${{ secrets.PROD_DB_NAME }}" >> .env
          echo "DB_PORT=3306" >> .env
          echo "NODE_ENV=production" >> .env
          echo "APP_URL=https://solutravo.zeta-app.fr" >> .env
          echo "secretKey=${{ secrets.secretKey }}" >> .env
          echo "expiresInn=${{ secrets.expiresInn }}" >> .env
          echo "expiresIn=${{ secrets.expiresIn }}" >> .env
          echo "COOKIE_MAX_AGE=${{ secrets.COOKIE_MAX_AGE }}" >> .env
          echo "INSEE_API_KEY=${{ secrets.INSEE_API_KEY }}" >> .env
          echo "PORT=${{ secrets.PORT }}" >> .env

      # DÉPLOIEMENT STAGING
      - name: Deploy Staging via FTP
        if: github.ref == 'refs/heads/main'
        uses: SamKirkland/FTP-Deploy-Action@4.3.3
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./backend/dist/
          server-dir: ./staging/
          exclude: |
            */.git
            */node_modules/*
            */.github/*
            */tests/*
          dangerous-clean-slate: true

      # DÉPLOIEMENT PRODUCTION
      - name: Deploy Production via FTP
        if: github.ref == 'refs/heads/prod_backend'
        uses: SamKirkland/FTP-Deploy-Action@4.3.3
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./backend/dist/
          server-dir: ./solutravo.zeta-app.fr/
          exclude: |
            */.git
            */node_modules/*
            */.github/*
            */tests/*
          dangerous-clean-slate: true